#!/usr/bin/env perl

#
# PostGIS - Spatial Types for PostgreSQL
# http://postgis.net
#
# Copyright (C) 2011 OpenGeo.org
# Copyright (C) 2009 Paul Ramsey <pramsey@cleverelephant.ca>
#
# This is free software; you can redistribute and/or modify it under
# the terms of the GNU General Public Licence. See the COPYING file.
#
#---------------------------------------------------------------------
#
# This script is aimed at restoring postgis data
# from a dumpfile produced by pg_dump -Fc
#
# Basically it will restore all but things known to belong
# to postgis. Will also convert some old known constructs
# into new ones.
#
# Tested on:
#
#    pg-8.4.9/pgis-1.4.3    => pg-8.4.9/pgis-2.0.0SVN
#    pg-8.4.9/pgis-2.0.0SVN => pg-8.4.9/pgis-2.0.0SVN
#    pg-8.4.9/pgis-2.0.0SVN => pg-9.1.2/pgis-2.0.0SVN
#    pg-9.1b3/pgis-1.5.3    => pg-9.1.1/pgis-2.0.0SVN
#
#---------------------------------------------------------------------

use warnings;
use strict;

my $me = $0;

my $usage = qq{
Usage:	$me [-v] [-L TOC] [-s schema] <dumpfile>
        Restore a custom dump (pg_dump -Fc) of a PostGIS-enabled database.
        First dump the old database: pg_dump -Fc MYDB > MYDB.dmp
        Then create a new database: createdb NEWDB
        Then install PostGIS in the new database:
           psql -f postgis/postgis.sql NEWDB
        Also install PostGIS topology and raster, if you were using them:
           psql -f topology/topology.sql NEWDB
           psql -f raster/rtpostgis.sql NEWDB
        Finally, pass the dump to this script and feed output to psql:
           $me MYDB.dmp | psql NEWDB
        The -v switch writes detailed report on stderr.
        Use -L to provide a TOC rather than extracting it from the dump.
        Use -s if you installed PostGIS in a custom schema.

};

my $DEBUG = 0;
my $POSTGIS_SCHEMA;
my $POSTGIS_TOC;

# NOTE: the SRID limits here are being discussed:
# http://lists.osgeo.org/pipermail/postgis-devel/2012-February/018440.html
my $SRID_MAXIMUM = @SRID_MAXIMUM@;
my $SRID_USER_MAXIMUM = @SRID_USER_MAXIMUM@;

while (@ARGV && $ARGV[0] =~ /^-/) {
  my $arg = shift(@ARGV);
  if ( $arg eq '-v' ) {
    $DEBUG = 1;
  }
  elsif ( $arg eq '-s' ) {
    $POSTGIS_SCHEMA = shift(@ARGV);
  }
  elsif ( $arg eq '-L' ) {
    $POSTGIS_TOC = shift(@ARGV);
  }
  elsif ( $arg eq '--' ) {
    last;
  }
  else {
    print STDERR "Unknown switch " . $arg;
    die $usage;
  }
}

die $usage if (@ARGV < 1);

my $dumpfile = $ARGV[0];
my $manifest = $dumpfile;
$manifest =~ s/\/$//; # strip trailing slash
$manifest .= ".lst";
my $hasTopology = 0;

die "$me:\tUnable to find 'pg_dump' on the path.\n" if ! `pg_dump --version`;
die "$me:\tUnable to find 'pg_restore' on the path.\n" if ! `pg_restore --version`;
die "$me:\tUnable to open dump file '$dumpfile'.\n" if ! -r $dumpfile;

print STDERR "Converting $dumpfile to ASCII on stdout...\n";

STDOUT->autoflush(1);

######################################################################
# Load the signatures of things to skip.
#

print STDERR "  Reading list of functions to ignore...\n";

my %skip = ();
while(my $l = <DATA>) {
  chop($l);
  print STDERR "DATA: $l\n" if $DEBUG;
  $l =~ s/\s//g;
  $skip{$l} = 1;
}

######################################################################
# Write a new manifest for the dump file, skipping the things that
# are part of PostGIS
#

if(!defined($POSTGIS_TOC)) {
  print STDERR "  Writing manifest of things to read from dump file...\n";

  open( DUMP, "pg_restore -f - -l $dumpfile |" ) || die "$me:\tCannot open dump file '$dumpfile'\n";
} else {
  open( DUMP, '<' . $POSTGIS_TOC) || die "$me:\tCannot open TOC file '$POSTGIS_TOC'\n";
}
open( MANIFEST, ">$manifest" ) || die "$me:\tCannot open manifest file '$manifest'\n";
while( my $l = <DUMP> ) {

  next if $l =~ /^\;/;
  my $sigHR = linesignature($l);
  my $sig = $sigHR; $sig =~ s/\s//g;
  $hasTopology = 1 if $sig eq 'SCHEMAtopology';

	if ( not defined ($POSTGIS_SCHEMA) )
	{
		if ( $l =~ / TABLE DATA ([^ ]*) spatial_ref_sys / )
		{
			$POSTGIS_SCHEMA = $1;
			print STDERR "Setting postgis schema to $POSTGIS_SCHEMA, as found in the dump";
		}
	}

  if ( $skip{$sig} ) {
    print STDERR "SKIP: $sigHR\n" if $DEBUG;
    next
  }
  print STDERR "KEEP: $sigHR\n" if $DEBUG;
  print MANIFEST $l;

}
close(MANIFEST);
close(DUMP) || die "$me: pg_restore returned an error\n";

######################################################################
# Convert the dump file into an ASCII file, stripping out the
# unwanted bits.
#
print STDERR "  Writing ASCII to stdout...\n";
open( INPUT, "pg_restore -f - -L $manifest $dumpfile |") || die "$me:\tCan't run pg_restore\n";

if ( defined $POSTGIS_SCHEMA ) {
  print STDOUT "SET search_path = \"" . $POSTGIS_SCHEMA . "\";\n";
}

#
# Disable topology metadata tables triggers to allow for population
# in arbitrary order.
#
if ( $hasTopology ) {
  print STDOUT "ALTER TABLE topology.layer DISABLE TRIGGER ALL;\n";
}

# Drop the spatial_ref_sys_srid_check to allow for custom invalid SRIDs in the dump
print STDOUT "ALTER TABLE spatial_ref_sys DROP constraint "
           . "spatial_ref_sys_srid_check;\n";
# Drop the spatial_ref_sys primary key to allow for SRID conversions
# which possibly end up taking the same spot
print STDOUT "ALTER TABLE spatial_ref_sys DROP constraint "
           . "spatial_ref_sys_pkey;\n";

# Backup entries found in new spatial_ref_sys for later updating the
print STDOUT "CREATE TEMP TABLE _pgis_restore_spatial_ref_sys AS "
            ."SELECT * FROM spatial_ref_sys;\n";
print STDOUT "DELETE FROM spatial_ref_sys;\n";

my $inCopy;
while( my $l = <INPUT> ) {
  if ( $l =~ /^COPY .+ FROM stdin;$/ ) {
    $inCopy = 1;
  }
  elsif ( $inCopy && $l =~ /^\\\.$/ ) {
    $inCopy = 0;
  }

  next if !$inCopy && $l =~ /^ *--/;

  if ( $l =~ /^SET search_path/ ) {
    $l =~ s/; *$/, public;/;
  }

  # This is to avoid confusing OPERATOR CLASS and OPERATOR FAMILY
  # with OPERATOR below
  elsif ( $l =~ /CREATE OPERATOR CLASS/ || $l =~ /CREATE OPERATOR FAMILY/ )
  {
  }

  # We can't skip OPERATORS from the manifest file
  # because it doesn't contain enough informations
  # about the type the operator is for
  elsif ( $l =~ /CREATE OPERATOR *([^ ,]*)/)
  {
    my $name = canonicalize_typename($1);
    my $larg = undef;
    my $rarg = undef;
    my @sublines = ($l);
    while( my $subline = <INPUT>)
    {
      push(@sublines, $subline);
      last if $subline =~ /;[\t ]*$/;
      if ( $subline =~ /leftarg *= *([^ ,]*)/i )
      {
        $larg=canonicalize_typename($1);
      }
      if ( $subline =~ /rightarg *= *([^ ,]*)/i )
      {
        $rarg=canonicalize_typename($1);
      }
    }

    if ( ! $larg ) {
      print STDERR "No larg, @sublines: [" . @sublines . "]\n";
    }

    my $sigHR = "OPERATOR " . $name .' ('.$larg.', '.$rarg.')';
    my $sig = $sigHR; $sig =~ s/\s//g;

    if ( $skip{$sig} )
    {
       print STDERR "SKIP: $sig\n" if $DEBUG;
       next;
    }

    print STDERR "KEEP: $sig\n" if $DEBUG;
    print STDOUT @sublines;
    next;
  }

  # Rewrite spatial table constraints
  #
  # Example 1:
  # CREATE TABLE geos_in (
  #     id integer NOT NULL,
  #     g public.geometry,
  #     CONSTRAINT enforce_dims_g CHECK ((public.st_ndims(g) = 2)),
  #     CONSTRAINT enforce_geotype_g CHECK (((public.geometrytype(g) = 'MULTILINESTRING'::text) OR (g IS NULL))),
  #     CONSTRAINT enforce_srid_g CHECK ((public.st_srid(g) = (-1)))
  # );
  #
  # Example 2:
  # CREATE TABLE boszip (
  #     gid integer NOT NULL,
  #     zip5 character(5),
  #     the_geom geometry,
  #     CONSTRAINT enforce_dims_the_geom CHECK ((ndims(the_geom) = 2)),
  #     CONSTRAINT enforce_geotype_the_geom CHECK (((geometrytype(the_geom) = 'MULTIPOLYGON'::text) OR (the_geom IS NULL))),
  #     CONSTRAINT enforce_srid_the_geom CHECK ((srid(the_geom) = 2249))
  # );
  #
  # Example 3:
  # CREATE TABLE "PIANIFICAZIONE__ELEMENTO_LINEA" (
  #     soft_gis_serial integer NOT NULL,
  #     "G" public.geometry,
  #     CONSTRAINT "enforce_dims_G" CHECK ((public.st_ndims("G") = 2)),
  #     CONSTRAINT "enforce_geotype_G" CHECK (((public.geometrytype("G") = 'MULTICURVE'::text) OR ("G" IS NULL))),
  #     CONSTRAINT "enforce_srid_G" CHECK ((public.st_srid("G") = (-1)))
  # );
  #
  #
  elsif ( $l =~ /CREATE TABLE *([^ ,]*)/)
  {
    print STDOUT $l;
    while( my $subline = <INPUT>)
    {
      if ( $subline =~ /CONSTRAINT "?enforce_dims_/i ) {
        $subline =~ s/\bndims\(/st_ndims(/;
      }
      if ( $subline =~ /CONSTRAINT "?enforce_srid_/i ) {
        $subline =~ s/\bsrid\(/st_srid(/;
        if ( $subline =~ /=\s\(?([-0-9][0-9]*)\)/ ) {
          my $oldsrid = $1;
          my $newsrid = clamp_srid($oldsrid);
          $subline =~ s/=\s*(\(?)[-0-9][0-9]*/= $1$newsrid/;
        } else {
          print STDERR "WARNING: could not find SRID value in: $subline";
        }
      }
      print STDOUT $subline;
      last if $subline =~ /;[\t ]*$/;
    }
    next;
  }

  # Parse comments, to avoid skipping quoted comments
  # See http://trac.osgeo.org/postgis/ticket/2759
  elsif ( $l =~ /^COMMENT ON .* IS '(.*)/)
  {
    print STDOUT $l;
    while( my $subline = <INPUT>)
    # A comment ends with an odd number of single quotes and a semicolon
    {
      print STDOUT $subline;
      last if ( $subline !~ /('*)[\t ]*;[\t ]*$/ || length($1) % 2 == 0)
    }
    next;
  }

  # Clamp SRIDS in spatial_ref_sys
  elsif ( $l =~ /COPY spatial_ref_sys /)
  {
    print STDOUT $l;
    while( my $subline = <INPUT>)
    {
      if ( $subline =~ /([0-9]*)\t/ ) {
        my $oldsrid = $1;
          my $newsrid = clamp_srid($oldsrid);
          $subline =~ s/^[0-9]*\t/${newsrid}\t/;
      }
      print STDOUT $subline;
      last if $subline =~ /^\\.$/;
    }
    next;
  }

  print STDOUT $l;

}

if ( defined $POSTGIS_SCHEMA ) {
  print STDOUT "SET search_path = \"" . $POSTGIS_SCHEMA . "\";\n";
}

if ( $hasTopology ) {

  # Re-enable topology.layer table triggers
  print STDOUT "ALTER TABLE topology.layer ENABLE TRIGGER ALL;\n";

  # Update topology SRID from geometry_columns view.
  # This is mainly to fix srids of -1
  # May be worth providing a "populate_topology_topology"
  print STDOUT "UPDATE topology.topology t set srid = g.srid "
             . "FROM geometry_columns g WHERE t.name = g.f_table_schema "
             . "AND g.f_table_name = 'face' and f_geometry_column = 'mbr';\n";

}

# Update spatial_ref_sys with entries found in new table
print STDOUT "UPDATE spatial_ref_sys o set auth_name = n.auth_name, "
           . "auth_srid = n.auth_srid, srtext = n.srtext, "
           . "proj4text = n.proj4text FROM "
           . "_pgis_restore_spatial_ref_sys n WHERE o.srid = n.srid;\n";
# Insert entries only found in new table
print STDOUT "INSERT INTO spatial_ref_sys SELECT * FROM "
           . "_pgis_restore_spatial_ref_sys n WHERE n.srid "
           . "NOT IN ( SELECT srid FROM spatial_ref_sys );\n";
# DROP TABLE _pgis_restore_spatial_ref_sys;
print STDOUT "DROP TABLE _pgis_restore_spatial_ref_sys;\n";

# Try re-enforcing spatial_ref_sys_srid_check, would fail if impossible
# but you'd still have your data
print STDOUT "ALTER TABLE spatial_ref_sys ADD constraint "
           . "spatial_ref_sys_srid_check check "
           . "( srid > 0 and srid < " . ($SRID_USER_MAXIMUM+1) ." ) ;\n";
# Try re-enforcing spatial_ref_sys primary key, would fail if impossible
# but you'd still have your data
print STDOUT "ALTER TABLE spatial_ref_sys ENABLE TRIGGER ALL;\n";
print STDOUT "ALTER TABLE spatial_ref_sys ADD PRIMARY KEY(srid);\n";


print STDERR "Done.\n";

######################################################################
# Strip a dump file manifest line down to the unique elements of
# type and signature.
#
sub linesignature {

  my $line = shift;
  my $sig;

  $line =~ s/\n$//;
  $line =~ s/\r$//;
  $line =~ s/OPERATOR CLASS/OPERATORCLASS/;
  $line =~ s/TABLE DATA/TABLEDATA/;
  $line =~ s/SHELL TYPE/SHELLTYPE/;
  $line =~ s/PROCEDURAL LANGUAGE/PROCEDURALLANGUAGE/;

  if( $line =~ /^(\d+)\; (\d+) (\d+) FK (\w+) (\w+) (.*) (\w*)/ ) {
    $sig = "FK " . $4 . " " . $6;
  }
  elsif( $line =~ /^\d+\; \d+ \d+ CAST - CAST (.*)/ ) {
    $sig = "CAST " . $1;
  }
  elsif( $line =~ /^(\d+)\; (\d+) (\d+) (\w+) (\w+) (.*) (\w*)/ ) {
    $sig = $4 . " " . $6;
  }
  elsif( $line =~ /PROCEDURALLANGUAGE.*plpgsql/ ) {
    $sig = "PROCEDURAL LANGUAGE plpgsql";
  }
  elsif ( $line =~ /SCHEMA - (\w+)/ ) {
    $sig = "SCHEMA $1";
  }
  elsif ( $line =~ /SEQUENCE - (\w+)/ ) {
    $sig = "SEQUENCE $1";
  }
  else {
    # TODO: something smarter here...
    $sig = $line
  }

  # Strip schema from signature
  # TODO: restrict to POSTGIS_SCHEMA
  $sig =~ s/[^\.(, ]*\.//g;

  return $sig;

}

#
# Canonicalize type names (they change between dump versions).
# Here we also strip schema qualification
#
sub
canonicalize_typename
{
	my $arg=shift;

	# Lower case
	$arg = lc($arg);

	# Trim whitespaces
	$arg =~ s/^\s*//;
	$arg =~ s/\s*$//;

	# Strip schema qualification
	#$arg =~ s/^public.//;
	$arg =~ s/^.*\.//;

	# Handle type name changes
	if ( $arg eq 'opaque' ) {
		$arg = 'internal';
	} elsif ( $arg eq 'boolean' ) {
		$arg = 'bool';
	} elsif ( $arg eq 'oldgeometry' ) {
		$arg = 'geometry';
	}

	# Timestamp with or without time zone
	if ( $arg =~ /timestamp .* time zone/ ) {
		$arg = 'timestamp';
	}

	return $arg;
}

# Change SRID to be within allowed ranges
sub
clamp_srid
{
  my $oldsrid = shift;
  my $newsrid = $oldsrid;

  if ( $oldsrid < 0 ) {
    $newsrid = 0;
    printf STDERR "  WARNING: SRID $oldsrid converted to $newsrid (official UNKNOWN)\n";
  } elsif ( $oldsrid > $SRID_MAXIMUM ) {
    $newsrid = $SRID_USER_MAXIMUM + 1 +
      # -1 is to reduce likelyhood of clashes
      # NOTE: must match core implementation (lwutil.c)
      ( $oldsrid % ( $SRID_MAXIMUM - $SRID_USER_MAXIMUM - 1 ) );
    printf STDERR "  WARNING: SRID $oldsrid converted to $newsrid (in reserved zone)\n";
  } elsif ( $oldsrid > $SRID_USER_MAXIMUM ) {
    printf STDERR "  WARNING: SRID $newsrid is in reserved zone\n";
  }

  return $newsrid;
}


######################################################################
# Here are all the signatures we want to skip.
#
__END__
ACL TABLE geography_columns
ACL TABLE geometry_columns
ACL TABLE spatial_ref_sys
AGGREGATE st_3dextent(geometry)
AGGREGATE st_asflatgeobuf(anyelement)
AGGREGATE st_asflatgeobuf(anyelement, boolean)
AGGREGATE st_asflatgeobuf(anyelement, boolean, text)
AGGREGATE st_asgeobuf(anyelement)
AGGREGATE st_asgeobuf(anyelement, text)
AGGREGATE st_asmvt(anyelement)
AGGREGATE st_asmvt(anyelement, text)
AGGREGATE st_asmvt(anyelement, text, integer)
AGGREGATE st_asmvt(anyelement, text, integer, text)
AGGREGATE st_asmvt(anyelement, text, integer, text, text)
AGGREGATE st_clusterintersecting(geometry)
AGGREGATE st_clusterwithin(geometry, double precision)
AGGREGATE st_collect(geometry)
AGGREGATE st_extent(geometry)
AGGREGATE st_makeline(geometry)
AGGREGATE st_memcollect(geometry)
AGGREGATE st_memunion(geometry)
AGGREGATE st_polygonize(geometry)
AGGREGATE st_union(geometry)
AGGREGATE st_union(geometry, double precision)
CAST (box2d AS box3d)
CAST (box2d AS geometry)
CAST (box3d AS box)
CAST (box3d AS box2d)
CAST (box3d AS geometry)
CAST (bytea AS geography)
CAST (bytea AS geometry)
CAST (geography AS bytea)
CAST (geography AS geography)
CAST (geography AS geometry)
CAST (geometry AS box)
CAST (geometry AS box2d)
CAST (geometry AS box3d)
CAST (geometry AS bytea)
CAST (geometry AS geography)
CAST (geometry AS geometry)
CAST (geometry AS json)
CAST (geometry AS jsonb)
CAST (geometry AS path)
CAST (geometry AS point)
CAST (geometry AS polygon)
CAST (geometry AS text)
CAST (path AS geometry)
CAST (point AS geometry)
CAST (polygon AS geometry)
CAST (text AS geometry)
COMMENT AGGREGATE st_3dextent(geometry)
COMMENT AGGREGATE st_clusterintersecting(geometry)
COMMENT AGGREGATE st_clusterwithin(geometry, double precision)
COMMENT AGGREGATE st_collect(geometry)
COMMENT AGGREGATE st_extent(geometry)
COMMENT AGGREGATE st_makeline(geometry)
COMMENT AGGREGATE st_memunion(geometry)
COMMENT AGGREGATE st_polygonize(geometry)
COMMENT AGGREGATE st_union(geometry)
COMMENT AGGREGATE st_union(geometry, gridsize double precision)
COMMENT FUNCTION addauth(text)
COMMENT FUNCTION addgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean)
COMMENT FUNCTION addgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean)
COMMENT FUNCTION addgeometrycolumn(table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean)
COMMENT FUNCTION box2d(geometry)
COMMENT FUNCTION box3d(geometry)
COMMENT FUNCTION checkauth(text, text)
COMMENT FUNCTION checkauth(text, text, text)
COMMENT FUNCTION disablelongtransactions()
COMMENT FUNCTION dropgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying)
COMMENT FUNCTION dropgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying)
COMMENT FUNCTION dropgeometrycolumn(table_name character varying, column_name character varying)
COMMENT FUNCTION dropgeometrytable(catalog_name character varying, schema_name character varying, table_name character varying)
COMMENT FUNCTION dropgeometrytable(schema_name character varying, table_name character varying)
COMMENT FUNCTION dropgeometrytable(table_name character varying)
COMMENT FUNCTION enablelongtransactions()
COMMENT FUNCTION find_srid(character varying, character varying, character varying)
COMMENT FUNCTION geometrytype(geometry)
COMMENT FUNCTION lockrow(text, text, text)
COMMENT FUNCTION lockrow(text, text, text, text, timestamp without time zone)
COMMENT FUNCTION lockrow(text, text, text, timestamp without time zone)
COMMENT FUNCTION populate_geometry_columns(tbl_oid oid, use_typmod boolean)
COMMENT FUNCTION populate_geometry_columns(use_typmod boolean)
COMMENT FUNCTION postgis_addbbox(geometry)
COMMENT FUNCTION postgis_dropbbox(geometry)
COMMENT FUNCTION postgis_extensions_upgrade()
COMMENT FUNCTION postgis_full_version()
COMMENT FUNCTION postgis_geos_version()
COMMENT FUNCTION postgis_hasbbox(geometry)
COMMENT FUNCTION postgis_lib_build_date()
COMMENT FUNCTION postgis_liblwgeom_version()
COMMENT FUNCTION postgis_lib_version()
COMMENT FUNCTION postgis_libxml_version()
COMMENT FUNCTION postgis_proj_version()
COMMENT FUNCTION postgis_scripts_build_date()
COMMENT FUNCTION postgis_scripts_installed()
COMMENT FUNCTION postgis_scripts_released()
COMMENT FUNCTION postgis_version()
COMMENT FUNCTION postgis_wagyu_version()
COMMENT FUNCTION st_3dclosestpoint(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_3ddistance(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_3dlength(geometry)
COMMENT FUNCTION st_3dlineinterpolatepoint(geometry, double precision)
COMMENT FUNCTION st_3dlongestline(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_3dmakebox(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_3dmaxdistance(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_3dperimeter(geometry)
COMMENT FUNCTION st_3dshortestline(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_addmeasure(geometry, double precision, double precision)
COMMENT FUNCTION st_addpoint(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_addpoint(geom1 geometry, geom2 geometry, integer)
COMMENT FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision)
COMMENT FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision)
COMMENT FUNCTION st_angle(line1 geometry, line2 geometry)
COMMENT FUNCTION st_angle(pt1 geometry, pt2 geometry, pt3 geometry, pt4 geometry)
COMMENT FUNCTION st_area(geog geography, use_spheroid boolean)
COMMENT FUNCTION st_area(geometry)
COMMENT FUNCTION st_azimuth(geog1 geography, geog2 geography)
COMMENT FUNCTION st_azimuth(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_boundary(geometry)
COMMENT FUNCTION st_boundingdiagonal(geom geometry, fits boolean)
COMMENT FUNCTION st_buffer(geography, double precision, integer)
COMMENT FUNCTION st_buffer(geography, double precision, text)
COMMENT FUNCTION st_buffer(geom geometry, radius double precision, options text)
COMMENT FUNCTION st_buffer(geom geometry, radius double precision, quadsegs integer)
COMMENT FUNCTION st_buildarea(geometry)
COMMENT FUNCTION st_centroid(geography, use_spheroid boolean)
COMMENT FUNCTION st_centroid(geometry)
COMMENT FUNCTION st_chaikinsmoothing(geometry, integer, boolean)
COMMENT FUNCTION st_clipbybox2d(geom geometry, box box2d)
COMMENT FUNCTION st_closestpoint(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_closestpointofapproach(geometry, geometry)
COMMENT FUNCTION st_clusterdbscan(geometry, eps double precision, minpoints integer)
COMMENT FUNCTION st_clusterkmeans(geom geometry, k integer, max_radius double precision)
COMMENT FUNCTION st_collect(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_collect(geometry[])
COMMENT FUNCTION st_collectionextract(geometry)
COMMENT FUNCTION st_collectionextract(geometry, integer)
COMMENT FUNCTION st_collectionhomogenize(geometry)
COMMENT FUNCTION st_concavehull(param_geom geometry, param_pctconvex double precision, param_allow_holes boolean)
COMMENT FUNCTION st_convexhull(geometry)
COMMENT FUNCTION st_coorddim(geometry geometry)
COMMENT FUNCTION st_cpawithin(geometry, geometry, double precision)
COMMENT FUNCTION st_curvetoline(geom geometry, tol double precision, toltype integer, flags integer)
COMMENT FUNCTION st_delaunaytriangles(g1 geometry, tolerance double precision, flags integer)
COMMENT FUNCTION st_difference(geom1 geometry, geom2 geometry, gridsize double precision)
COMMENT FUNCTION st_dimension(geometry)
COMMENT FUNCTION st_distancecpa(geometry, geometry)
COMMENT FUNCTION st_distance(geog1 geography, geog2 geography, use_spheroid boolean)
COMMENT FUNCTION st_distance(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_distancesphere(geom1 geometry, geom2 geometry, radius double precision)
COMMENT FUNCTION st_distancespheroid(geom1 geometry, geom2 geometry, spheroid)
COMMENT FUNCTION st_dump(geometry)
COMMENT FUNCTION st_dumppoints(geometry)
COMMENT FUNCTION st_dumprings(geometry)
COMMENT FUNCTION st_dumpsegments(geometry)
COMMENT FUNCTION st_endpoint(geometry)
COMMENT FUNCTION st_envelope(geometry)
COMMENT FUNCTION st_estimatedextent(text, text)
COMMENT FUNCTION st_estimatedextent(text, text, text)
COMMENT FUNCTION st_estimatedextent(text, text, text, boolean)
COMMENT FUNCTION st_expand(box2d, double precision)
COMMENT FUNCTION st_expand(box3d, double precision)
COMMENT FUNCTION st_expand(box box2d, dx double precision, dy double precision)
COMMENT FUNCTION st_expand(box box3d, dx double precision, dy double precision, dz double precision)
COMMENT FUNCTION st_expand(geometry, double precision)
COMMENT FUNCTION st_expand(geom geometry, dx double precision, dy double precision, dz double precision, dm double precision)
COMMENT FUNCTION st_exteriorring(geometry)
COMMENT FUNCTION st_filterbym(geometry, double precision, double precision, boolean)
COMMENT FUNCTION st_flipcoordinates(geometry)
COMMENT FUNCTION st_force2d(geometry)
COMMENT FUNCTION st_force3d(geom geometry, zvalue double precision)
COMMENT FUNCTION st_force3dm(geom geometry, mvalue double precision)
COMMENT FUNCTION st_force3dz(geom geometry, zvalue double precision)
COMMENT FUNCTION st_force4d(geom geometry, zvalue double precision, mvalue double precision)
COMMENT FUNCTION st_forcecollection(geometry)
COMMENT FUNCTION st_forcecurve(geometry)
COMMENT FUNCTION st_forcepolygonccw(geometry)
COMMENT FUNCTION st_forcepolygoncw(geometry)
COMMENT FUNCTION st_forcerhr(geometry)
COMMENT FUNCTION st_forcesfs(geometry)
COMMENT FUNCTION st_forcesfs(geometry, version text)
COMMENT FUNCTION st_frechetdistance(geom1 geometry, geom2 geometry, double precision)
COMMENT FUNCTION st_generatepoints(area geometry, npoints integer)
COMMENT FUNCTION st_generatepoints(area geometry, npoints integer, seed integer)
COMMENT FUNCTION st_geometricmedian(g geometry, tolerance double precision, max_iter integer, fail_if_not_converged boolean)
COMMENT FUNCTION st_geometryn(geometry, integer)
COMMENT FUNCTION st_geometrytype(geometry)
COMMENT FUNCTION st_hasarc(geometry geometry)
COMMENT FUNCTION st_hausdorffdistance(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_hausdorffdistance(geom1 geometry, geom2 geometry, double precision)
COMMENT FUNCTION st_hexagongrid(size double precision, bounds geometry, OUT geom geometry, OUT i integer, OUT j integer)
COMMENT FUNCTION st_hexagon(size double precision, cell_i integer, cell_j integer, origin geometry)
COMMENT FUNCTION st_interiorringn(geometry, integer)
COMMENT FUNCTION st_interpolatepoint(line geometry, point geometry)
COMMENT FUNCTION st_intersection(geography, geography)
COMMENT FUNCTION st_intersection(geom1 geometry, geom2 geometry, gridsize double precision)
COMMENT FUNCTION st_inversetransformpipeline(geom geometry, pipeline text, to_srid integer)
COMMENT FUNCTION st_isclosed(geometry)
COMMENT FUNCTION st_iscollection(geometry)
COMMENT FUNCTION st_isempty(geometry)
COMMENT FUNCTION st_ispolygonccw(geometry)
COMMENT FUNCTION st_ispolygoncw(geometry)
COMMENT FUNCTION st_isring(geometry)
COMMENT FUNCTION st_issimple(geometry)
COMMENT FUNCTION st_isvaliddetail(geom geometry, flags integer)
COMMENT FUNCTION st_isvalid(geometry)
COMMENT FUNCTION st_isvalid(geometry, integer)
COMMENT FUNCTION st_isvalidreason(geometry)
COMMENT FUNCTION st_isvalidreason(geometry, integer)
COMMENT FUNCTION st_isvalidtrajectory(geometry)
COMMENT FUNCTION st_length2d(geometry)
COMMENT FUNCTION st_length(geog geography, use_spheroid boolean)
COMMENT FUNCTION st_length(geometry)
COMMENT FUNCTION st_lengthspheroid(geometry, spheroid)
COMMENT FUNCTION st_letters(letters text, font json)
COMMENT FUNCTION st_linefrommultipoint(geometry)
COMMENT FUNCTION st_lineinterpolatepoint(geometry, double precision)
COMMENT FUNCTION st_lineinterpolatepoints(geometry, double precision, repeat boolean)
COMMENT FUNCTION st_linelocatepoint(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_linemerge(geometry)
COMMENT FUNCTION st_linemerge(geometry, boolean)
COMMENT FUNCTION st_linesubstring(geometry, double precision, double precision)
COMMENT FUNCTION st_linetocurve(geometry geometry)
COMMENT FUNCTION st_locatealong(geometry geometry, measure double precision, leftrightoffset double precision)
COMMENT FUNCTION st_locatebetweenelevations(geometry geometry, fromelevation double precision, toelevation double precision)
COMMENT FUNCTION st_locatebetween(geometry geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision)
COMMENT FUNCTION st_longestline(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_makebox2d(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer)
COMMENT FUNCTION st_makeline(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_makeline(geometry[])
COMMENT FUNCTION st_makepoint(double precision, double precision)
COMMENT FUNCTION st_makepoint(double precision, double precision, double precision)
COMMENT FUNCTION st_makepoint(double precision, double precision, double precision, double precision)
COMMENT FUNCTION st_makepointm(double precision, double precision, double precision)
COMMENT FUNCTION st_makepolygon(geometry)
COMMENT FUNCTION st_makepolygon(geometry, geometry[])
COMMENT FUNCTION st_makevalid(geometry)
COMMENT FUNCTION st_makevalid(geom geometry, params text)
COMMENT FUNCTION st_maxdistance(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_maximuminscribedcircle(geometry, OUT center geometry, OUT nearest geometry, OUT radius double precision)
COMMENT FUNCTION st_memsize(geometry)
COMMENT FUNCTION st_m(geometry)
COMMENT FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer)
COMMENT FUNCTION st_minimumboundingradius(geometry, OUT center geometry, OUT radius double precision)
COMMENT FUNCTION st_minimumclearance(geometry)
COMMENT FUNCTION st_minimumclearanceline(geometry)
COMMENT FUNCTION st_multi(geometry)
COMMENT FUNCTION st_ndims(geometry)
COMMENT FUNCTION st_node(g geometry)
COMMENT FUNCTION st_normalize(geom geometry)
COMMENT FUNCTION st_npoints(geometry)
COMMENT FUNCTION st_nrings(geometry)
COMMENT FUNCTION st_numgeometries(geometry)
COMMENT FUNCTION st_numinteriorring(geometry)
COMMENT FUNCTION st_numinteriorrings(geometry)
COMMENT FUNCTION st_numpatches(geometry)
COMMENT FUNCTION st_numpoints(geometry)
COMMENT FUNCTION st_offsetcurve(line geometry, distance double precision, params text)
COMMENT FUNCTION st_orientedenvelope(geometry)
COMMENT FUNCTION st_patchn(geometry, integer)
COMMENT FUNCTION st_perimeter2d(geometry)
COMMENT FUNCTION st_perimeter(geog geography, use_spheroid boolean)
COMMENT FUNCTION st_perimeter(geometry)
COMMENT FUNCTION st_point(double precision, double precision)
COMMENT FUNCTION st_point(double precision, double precision, srid integer)
COMMENT FUNCTION st_pointm(xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer)
COMMENT FUNCTION st_pointn(geometry, integer)
COMMENT FUNCTION st_pointonsurface(geometry)
COMMENT FUNCTION st_points(geometry)
COMMENT FUNCTION st_pointzm(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer)
COMMENT FUNCTION st_pointz(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer)
COMMENT FUNCTION st_polygon(geometry, integer)
COMMENT FUNCTION st_polygonize(geometry[])
COMMENT FUNCTION st_project(geog geography, distance double precision, azimuth double precision)
COMMENT FUNCTION st_quantizecoordinates(g geometry, prec_x integer, prec_y integer, prec_z integer, prec_m integer)
COMMENT FUNCTION st_reduceprecision(geom geometry, gridsize double precision)
COMMENT FUNCTION st_removepoint(geometry, integer)
COMMENT FUNCTION st_removerepeatedpoints(geom geometry, tolerance double precision)
COMMENT FUNCTION st_reverse(geometry)
COMMENT FUNCTION st_rotate(geometry, double precision)
COMMENT FUNCTION st_rotate(geometry, double precision, double precision, double precision)
COMMENT FUNCTION st_rotate(geometry, double precision, geometry)
COMMENT FUNCTION st_rotatex(geometry, double precision)
COMMENT FUNCTION st_rotatey(geometry, double precision)
COMMENT FUNCTION st_rotatez(geometry, double precision)
COMMENT FUNCTION st_scale(geometry, double precision, double precision)
COMMENT FUNCTION st_scale(geometry, double precision, double precision, double precision)
COMMENT FUNCTION st_scale(geometry, geometry)
COMMENT FUNCTION st_scale(geometry, geometry, origin geometry)
COMMENT FUNCTION st_scroll(geometry, geometry)
COMMENT FUNCTION st_segmentize(geog geography, max_segment_length double precision)
COMMENT FUNCTION st_segmentize(geometry, double precision)
COMMENT FUNCTION st_seteffectivearea(geometry, double precision, integer)
COMMENT FUNCTION st_setpoint(geometry, integer, geometry)
COMMENT FUNCTION st_setsrid(geom geometry, srid integer)
COMMENT FUNCTION st_sharedpaths(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_shiftlongitude(geometry)
COMMENT FUNCTION st_shortestline(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_simplify(geometry, double precision)
COMMENT FUNCTION st_simplify(geometry, double precision, boolean)
COMMENT FUNCTION st_simplifypolygonhull(geom geometry, vertex_fraction double precision, is_outer boolean)
COMMENT FUNCTION st_simplifypreservetopology(geometry, double precision)
COMMENT FUNCTION st_simplifyvw(geometry, double precision)
COMMENT FUNCTION st_snap(geom1 geometry, geom2 geometry, double precision)
COMMENT FUNCTION st_snaptogrid(geom1 geometry, geom2 geometry, double precision, double precision, double precision, double precision)
COMMENT FUNCTION st_snaptogrid(geometry, double precision)
COMMENT FUNCTION st_snaptogrid(geometry, double precision, double precision)
COMMENT FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision)
COMMENT FUNCTION st_split(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_squaregrid(size double precision, bounds geometry, OUT geom geometry, OUT i integer, OUT j integer)
COMMENT FUNCTION st_square(size double precision, cell_i integer, cell_j integer, origin geometry)
COMMENT FUNCTION st_srid(geom geometry)
COMMENT FUNCTION st_startpoint(geometry)
COMMENT FUNCTION st_subdivide(geom geometry, maxvertices integer, gridsize double precision)
COMMENT FUNCTION st_summary(geography)
COMMENT FUNCTION st_summary(geometry)
COMMENT FUNCTION st_swapordinates(geom geometry, ords cstring)
COMMENT FUNCTION st_symdifference(geom1 geometry, geom2 geometry, gridsize double precision)
COMMENT FUNCTION st_tileenvelope(zoom integer, x integer, y integer, bounds geometry, margin double precision)
COMMENT FUNCTION st_transform(geometry, integer)
COMMENT FUNCTION st_transform(geom geometry, from_proj text, to_proj text)
COMMENT FUNCTION st_transform(geom geometry, from_proj text, to_srid integer)
COMMENT FUNCTION st_transform(geom geometry, to_proj text)
COMMENT FUNCTION st_transformpipeline(geom geometry, pipeline text, to_srid integer)
COMMENT FUNCTION st_translate(geometry, double precision, double precision)
COMMENT FUNCTION st_translate(geometry, double precision, double precision, double precision)
COMMENT FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision)
COMMENT FUNCTION st_triangulatepolygon(g1 geometry)
COMMENT FUNCTION st_unaryunion(geometry, gridsize double precision)
COMMENT FUNCTION st_union(geom1 geometry, geom2 geometry)
COMMENT FUNCTION st_union(geom1 geometry, geom2 geometry, gridsize double precision)
COMMENT FUNCTION st_union(geometry[])
COMMENT FUNCTION st_voronoilines(g1 geometry, tolerance double precision, extend_to geometry)
COMMENT FUNCTION st_voronoipolygons(g1 geometry, tolerance double precision, extend_to geometry)
COMMENT FUNCTION st_wrapx(geom geometry, wrap double precision, move double precision)
COMMENT FUNCTION st_x(geometry)
COMMENT FUNCTION st_xmax(box3d)
COMMENT FUNCTION st_xmin(box3d)
COMMENT FUNCTION st_y(geometry)
COMMENT FUNCTION st_ymax(box3d)
COMMENT FUNCTION st_ymin(box3d)
COMMENT FUNCTION st_z(geometry)
COMMENT FUNCTION st_zmax(box3d)
COMMENT FUNCTION st_zmflag(geometry)
COMMENT FUNCTION st_zmin(box3d)
COMMENT FUNCTION unlockrows(text)
COMMENT FUNCTION updategeometrysrid(catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer)
COMMENT FUNCTION updategeometrysrid(character varying, character varying, character varying, integer)
COMMENT FUNCTION updategeometrysrid(character varying, character varying, integer)
COMMENT TYPE box2d
COMMENT TYPE box3d
COMMENT TYPE geography
COMMENT TYPE geometry
COMMENT TYPE geometry_dump
CONSTRAINT spatial_ref_sys spatial_ref_sys_pkey
FUNCTION addauth(text)
FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer, boolean)
FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer, boolean)
FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer, boolean)
FUNCTION box2d(box3d)
FUNCTION box2df_in(cstring)
FUNCTION box2df_out(box2df)
FUNCTION box2d(geometry)
FUNCTION box2d_in(cstring)
FUNCTION box2d_out(box2d)
FUNCTION box3d(box2d)
FUNCTION box3d(geometry)
FUNCTION box3d_in(cstring)
FUNCTION box3d_out(box3d)
FUNCTION box3dtobox(box3d)
FUNCTION box(box3d)
FUNCTION box(geometry)
FUNCTION bytea(geography)
FUNCTION bytea(geometry)
FUNCTION checkauth(text, text)
FUNCTION checkauth(text, text, text)
FUNCTION checkauthtrigger()
FUNCTION contains_2d(box2df, box2df)
FUNCTION contains_2d(box2df, geometry)
FUNCTION contains_2d(geometry, box2df)
FUNCTION disablelongtransactions()
FUNCTION dropgeometrycolumn(character varying, character varying)
FUNCTION dropgeometrycolumn(character varying, character varying, character varying)
FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying)
FUNCTION dropgeometrytable(character varying)
FUNCTION dropgeometrytable(character varying, character varying)
FUNCTION dropgeometrytable(character varying, character varying, character varying)
FUNCTION enablelongtransactions()
FUNCTION equals(geometry, geometry)
FUNCTION find_srid(character varying, character varying, character varying)
FUNCTION geog_brin_inclusion_add_value(internal, internal, internal, internal)
FUNCTION geography_analyze(internal)
FUNCTION geography(bytea)
FUNCTION geography_cmp(geography, geography)
FUNCTION geography_distance_knn(geography, geography)
FUNCTION geography_eq(geography, geography)
FUNCTION geography_ge(geography, geography)
FUNCTION geography(geography, integer, boolean)
FUNCTION geography(geometry)
FUNCTION geography_gist_compress(internal)
FUNCTION geography_gist_consistent(internal, geography, integer)
FUNCTION geography_gist_decompress(internal)
FUNCTION geography_gist_distance(internal, geography, integer)
FUNCTION geography_gist_penalty(internal, internal, internal)
FUNCTION geography_gist_picksplit(internal, internal)
FUNCTION geography_gist_same(box2d, box2d, internal)
FUNCTION geography_gist_union(bytea, internal)
FUNCTION geography_gt(geography, geography)
FUNCTION geography_in(cstring, oid, integer)
FUNCTION geography_le(geography, geography)
FUNCTION geography_lt(geography, geography)
FUNCTION geography_out(geography)
FUNCTION geography_overlaps(geography, geography)
FUNCTION geography_recv(internal, oid, integer)
FUNCTION geography_send(geography)
FUNCTION geography_spgist_choose_nd(internal, internal)
FUNCTION geography_spgist_compress_nd(internal)
FUNCTION geography_spgist_config_nd(internal, internal)
FUNCTION geography_spgist_inner_consistent_nd(internal, internal)
FUNCTION geography_spgist_leaf_consistent_nd(internal, internal)
FUNCTION geography_spgist_picksplit_nd(internal, internal)
FUNCTION geography_typmod_in(cstring[])
FUNCTION geography_typmod_out(integer)
FUNCTION geom2d_brin_inclusion_add_value(internal, internal, internal, internal)
FUNCTION geom3d_brin_inclusion_add_value(internal, internal, internal, internal)
FUNCTION geom4d_brin_inclusion_add_value(internal, internal, internal, internal)
FUNCTION geometry_above(geometry, geometry)
FUNCTION geometry_analyze(internal)
FUNCTION geometry_below(geometry, geometry)
FUNCTION geometry(box2d)
FUNCTION geometry(box3d)
FUNCTION geometry(bytea)
FUNCTION geometry_cmp(geometry, geometry)
FUNCTION geometry_contained_3d(geometry, geometry)
FUNCTION geometry_contains_3d(geometry, geometry)
FUNCTION geometry_contains(geometry, geometry)
FUNCTION geometry_contains_nd(geometry, geometry)
FUNCTION geometry_distance_box(geometry, geometry)
FUNCTION geometry_distance_centroid(geometry, geometry)
FUNCTION geometry_distance_centroid_nd(geometry, geometry)
FUNCTION geometry_distance_cpa(geometry, geometry)
FUNCTION geometry_eq(geometry, geometry)
FUNCTION geometry_ge(geometry, geometry)
FUNCTION geometry(geography)
FUNCTION geometry(geometry, integer, boolean)
FUNCTION geometry_gist_compress_2d(internal)
FUNCTION geometry_gist_compress_nd(internal)
FUNCTION geometry_gist_consistent_2d(internal, geometry, integer)
FUNCTION geometry_gist_consistent_nd(internal, geometry, integer)
FUNCTION geometry_gist_decompress_2d(internal)
FUNCTION geometry_gist_decompress_nd(internal)
FUNCTION geometry_gist_distance_2d(internal, geometry, integer)
FUNCTION geometry_gist_distance_nd(internal, geometry, integer)
FUNCTION geometry_gist_penalty_2d(internal, internal, internal)
FUNCTION geometry_gist_penalty_nd(internal, internal, internal)
FUNCTION geometry_gist_picksplit_2d(internal, internal)
FUNCTION geometry_gist_picksplit_nd(internal, internal)
FUNCTION geometry_gist_same_2d(geometry, geometry, internal)
FUNCTION geometry_gist_same_nd(geometry, geometry, internal)
FUNCTION geometry_gist_sortsupport_2d(internal)
FUNCTION geometry_gist_union_2d(bytea, internal)
FUNCTION geometry_gist_union_nd(bytea, internal)
FUNCTION geometry_gt(geometry, geometry)
FUNCTION geometry_hash(geometry)
FUNCTION geometry_in(cstring)
FUNCTION geometry_left(geometry, geometry)
FUNCTION geometry_le(geometry, geometry)
FUNCTION geometry_lt(geometry, geometry)
FUNCTION geometry_out(geometry)
FUNCTION geometry_overabove(geometry, geometry)
FUNCTION geometry_overbelow(geometry, geometry)
FUNCTION geometry_overlaps_3d(geometry, geometry)
FUNCTION geometry_overlaps(geometry, geometry)
FUNCTION geometry_overlaps_nd(geometry, geometry)
FUNCTION geometry_overleft(geometry, geometry)
FUNCTION geometry_overright(geometry, geometry)
FUNCTION geometry(path)
FUNCTION geometry(point)
FUNCTION geometry(polygon)
FUNCTION geometry_recv(internal)
FUNCTION geometry_right(geometry, geometry)
FUNCTION geometry_same_3d(geometry, geometry)
FUNCTION geometry_same(geometry, geometry)
FUNCTION geometry_same_nd(geometry, geometry)
FUNCTION geometry_send(geometry)
FUNCTION geometry_sortsupport(internal)
FUNCTION geometry_spgist_choose_2d(internal, internal)
FUNCTION geometry_spgist_choose_3d(internal, internal)
FUNCTION geometry_spgist_choose_nd(internal, internal)
FUNCTION geometry_spgist_compress_2d(internal)
FUNCTION geometry_spgist_compress_3d(internal)
FUNCTION geometry_spgist_compress_nd(internal)
FUNCTION geometry_spgist_config_2d(internal, internal)
FUNCTION geometry_spgist_config_3d(internal, internal)
FUNCTION geometry_spgist_config_nd(internal, internal)
FUNCTION geometry_spgist_inner_consistent_2d(internal, internal)
FUNCTION geometry_spgist_inner_consistent_3d(internal, internal)
FUNCTION geometry_spgist_inner_consistent_nd(internal, internal)
FUNCTION geometry_spgist_leaf_consistent_2d(internal, internal)
FUNCTION geometry_spgist_leaf_consistent_3d(internal, internal)
FUNCTION geometry_spgist_leaf_consistent_nd(internal, internal)
FUNCTION geometry_spgist_picksplit_2d(internal, internal)
FUNCTION geometry_spgist_picksplit_3d(internal, internal)
FUNCTION geometry_spgist_picksplit_nd(internal, internal)
FUNCTION geometry(text)
FUNCTION geometrytype(geography)
FUNCTION geometrytype(geometry)
FUNCTION geometry_typmod_in(cstring[])
FUNCTION geometry_typmod_out(integer)
FUNCTION geometry_within(geometry, geometry)
FUNCTION geometry_within_nd(geometry, geometry)
FUNCTION geomfromewkb(bytea)
FUNCTION geomfromewkt(text)
FUNCTION get_proj4_from_srid(integer)
FUNCTION gettransactionid()
FUNCTION gidx_in(cstring)
FUNCTION gidx_out(gidx)
FUNCTION gserialized_gist_joinsel_2d(internal, oid, internal, smallint)
FUNCTION gserialized_gist_joinsel_nd(internal, oid, internal, smallint)
FUNCTION gserialized_gist_sel_2d(internal, oid, internal, integer)
FUNCTION gserialized_gist_sel_nd(internal, oid, internal, integer)
FUNCTION is_contained_2d(box2df, box2df)
FUNCTION is_contained_2d(box2df, geometry)
FUNCTION is_contained_2d(geometry, box2df)
FUNCTION jsonb(geometry)
FUNCTION json(geometry)
FUNCTION lockrow(text, text, text)
FUNCTION lockrow(text, text, text, text)
FUNCTION lockrow(text, text, text, text, timestamp without time zone)
FUNCTION lockrow(text, text, text, timestamp without time zone)
FUNCTION longtransactionsenabled()
FUNCTION overlaps_2d(box2df, box2df)
FUNCTION overlaps_2d(box2df, geometry)
FUNCTION overlaps_2d(geometry, box2df)
FUNCTION overlaps_geog(geography, gidx)
FUNCTION overlaps_geog(gidx, geography)
FUNCTION overlaps_geog(gidx, gidx)
FUNCTION overlaps_nd(geometry, gidx)
FUNCTION overlaps_nd(gidx, geometry)
FUNCTION overlaps_nd(gidx, gidx)
FUNCTION path(geometry)
FUNCTION pgis_asflatgeobuf_finalfn(internal)
FUNCTION pgis_asflatgeobuf_transfn(internal, anyelement)
FUNCTION pgis_asflatgeobuf_transfn(internal, anyelement, boolean)
FUNCTION pgis_asflatgeobuf_transfn(internal, anyelement, boolean, text)
FUNCTION pgis_asgeobuf_finalfn(internal)
FUNCTION pgis_asgeobuf_transfn(internal, anyelement)
FUNCTION pgis_asgeobuf_transfn(internal, anyelement, text)
FUNCTION pgis_asmvt_combinefn(internal, internal)
FUNCTION pgis_asmvt_deserialfn(bytea, internal)
FUNCTION pgis_asmvt_finalfn(internal)
FUNCTION pgis_asmvt_serialfn(internal)
FUNCTION pgis_asmvt_transfn(internal, anyelement)
FUNCTION pgis_asmvt_transfn(internal, anyelement, text)
FUNCTION pgis_asmvt_transfn(internal, anyelement, text, integer)
FUNCTION pgis_asmvt_transfn(internal, anyelement, text, integer, text)
FUNCTION pgis_asmvt_transfn(internal, anyelement, text, integer, text, text)
FUNCTION pgis_geometry_accum_transfn(internal, geometry)
FUNCTION pgis_geometry_accum_transfn(internal, geometry, double precision)
FUNCTION pgis_geometry_accum_transfn(internal, geometry, double precision, integer)
FUNCTION pgis_geometry_clusterintersecting_finalfn(internal)
FUNCTION pgis_geometry_clusterwithin_finalfn(internal)
FUNCTION pgis_geometry_collect_finalfn(internal)
FUNCTION pgis_geometry_makeline_finalfn(internal)
FUNCTION pgis_geometry_polygonize_finalfn(internal)
FUNCTION pgis_geometry_union_parallel_combinefn(internal, internal)
FUNCTION pgis_geometry_union_parallel_deserialfn(bytea, internal)
FUNCTION pgis_geometry_union_parallel_finalfn(internal)
FUNCTION pgis_geometry_union_parallel_serialfn(internal)
FUNCTION pgis_geometry_union_parallel_transfn(internal, geometry)
FUNCTION pgis_geometry_union_parallel_transfn(internal, geometry, double precision)
FUNCTION point(geometry)
FUNCTION polygon(geometry)
FUNCTION populate_geometry_columns(boolean)
FUNCTION populate_geometry_columns(oid, boolean)
FUNCTION postgis_addbbox(geometry)
FUNCTION postgis_cache_bbox()
FUNCTION postgis_constraint_dims(text, text, text)
FUNCTION postgis_constraint_srid(text, text, text)
FUNCTION postgis_constraint_type(text, text, text)
FUNCTION _postgis_deprecate(text, text, text)
FUNCTION postgis_dropbbox(geometry)
FUNCTION postgis_extensions_upgrade()
FUNCTION postgis_full_version()
FUNCTION postgis_geos_noop(geometry)
FUNCTION postgis_geos_version()
FUNCTION postgis_getbbox(geometry)
FUNCTION postgis_hasbbox(geometry)
FUNCTION _postgis_index_extent(regclass, text)
FUNCTION postgis_index_supportfn(internal)
FUNCTION _postgis_join_selectivity(regclass, text, regclass, text, text)
FUNCTION postgis_lib_build_date()
FUNCTION postgis_libjson_version()
FUNCTION postgis_liblwgeom_version()
FUNCTION postgis_libprotobuf_version()
FUNCTION postgis_lib_revision()
FUNCTION postgis_lib_version()
FUNCTION postgis_libxml_version()
FUNCTION postgis_noop(geometry)
FUNCTION _postgis_pgsql_version()
FUNCTION postgis_proj_version()
FUNCTION postgis_scripts_build_date()
FUNCTION postgis_scripts_installed()
FUNCTION _postgis_scripts_pgsql_version()
FUNCTION postgis_scripts_released()
FUNCTION _postgis_selectivity(regclass, text, geometry, text)
FUNCTION _postgis_stats(regclass, text, text)
FUNCTION postgis_svn_version()
FUNCTION postgis_transform_geometry(geometry, text, text, integer)
FUNCTION postgis_transform_pipeline_geometry(geometry, text, boolean, integer)
FUNCTION postgis_type_name(character varying, integer, boolean)
FUNCTION postgis_typmod_dims(integer)
FUNCTION postgis_typmod_srid(integer)
FUNCTION postgis_typmod_type(integer)
FUNCTION postgis_version()
FUNCTION postgis_wagyu_version()
FUNCTION spheroid_in(cstring)
FUNCTION spheroid_out(spheroid)
FUNCTION st_3dclosestpoint(geometry, geometry)
FUNCTION _st_3ddfullywithin(geometry, geometry, double precision)
FUNCTION st_3ddfullywithin(geometry, geometry, double precision)
FUNCTION st_3ddistance(geometry, geometry)
FUNCTION _st_3ddwithin(geometry, geometry, double precision)
FUNCTION st_3ddwithin(geometry, geometry, double precision)
FUNCTION _st_3dintersects(geometry, geometry)
FUNCTION st_3dintersects(geometry, geometry)
FUNCTION st_3dlength(geometry)
FUNCTION st_3dlineinterpolatepoint(geometry, double precision)
FUNCTION st_3dlongestline(geometry, geometry)
FUNCTION st_3dmakebox(geometry, geometry)
FUNCTION st_3dmaxdistance(geometry, geometry)
FUNCTION st_3dperimeter(geometry)
FUNCTION st_3dshortestline(geometry, geometry)
FUNCTION st_addmeasure(geometry, double precision, double precision)
FUNCTION st_addpoint(geometry, geometry)
FUNCTION st_addpoint(geometry, geometry, integer)
FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision)
FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision)
FUNCTION st_angle(geometry, geometry)
FUNCTION st_angle(geometry, geometry, geometry, geometry)
FUNCTION st_area2d(geometry)
FUNCTION st_area(geography, boolean)
FUNCTION st_area(geometry)
FUNCTION st_area(text)
FUNCTION st_asbinary(geography)
FUNCTION st_asbinary(geography, text)
FUNCTION st_asbinary(geometry)
FUNCTION st_asbinary(geometry, text)
FUNCTION st_asencodedpolyline(geometry, integer)
FUNCTION st_asewkb(geometry)
FUNCTION st_asewkb(geometry, text)
FUNCTION st_asewkt(geography)
FUNCTION st_asewkt(geography, integer)
FUNCTION st_asewkt(geometry)
FUNCTION st_asewkt(geometry, integer)
FUNCTION st_asewkt(text)
FUNCTION st_asgeojson(geography, integer, integer)
FUNCTION st_asgeojson(geometry, integer, integer)
FUNCTION st_asgeojson(record, text, integer, boolean)
FUNCTION st_asgeojson(text)
FUNCTION st_asgml(geography, integer, integer, text, text)
FUNCTION st_asgml(geometry, integer, integer)
FUNCTION st_asgml(integer, geography, integer, integer, text, text)
FUNCTION _st_asgml(integer, geometry, integer, integer, text, text)
FUNCTION st_asgml(integer, geometry, integer, integer, text, text)
FUNCTION st_asgml(text)
FUNCTION st_ashexewkb(geometry)
FUNCTION st_ashexewkb(geometry, text)
FUNCTION st_askml(geography, integer, text)
FUNCTION st_askml(geometry, integer, text)
FUNCTION st_askml(text)
FUNCTION st_aslatlontext(geometry, text)
FUNCTION st_asmarc21(geometry, text)
FUNCTION st_asmvtgeom(geometry, box2d, integer, integer, boolean)
FUNCTION st_assvg(geography, integer, integer)
FUNCTION st_assvg(geometry, integer, integer)
FUNCTION st_assvg(text)
FUNCTION st_astext(geography)
FUNCTION st_astext(geography, integer)
FUNCTION st_astext(geometry)
FUNCTION st_astext(geometry, integer)
FUNCTION st_astext(text)
FUNCTION st_astwkb(geometry[], bigint[], integer, integer, integer, boolean, boolean)
FUNCTION st_astwkb(geometry, integer, integer, integer, boolean, boolean)
FUNCTION st_asx3d(geometry, integer, integer)
FUNCTION _st_asx3d(integer, geometry, integer, integer, text)
FUNCTION st_azimuth(geography, geography)
FUNCTION st_azimuth(geometry, geometry)
FUNCTION st_bdmpolyfromtext(text, integer)
FUNCTION st_bdpolyfromtext(text, integer)
FUNCTION _st_bestsrid(geography)
FUNCTION _st_bestsrid(geography, geography)
FUNCTION st_boundary(geometry)
FUNCTION st_boundingdiagonal(geometry, boolean)
FUNCTION st_box2dfromgeohash(text, integer)
FUNCTION st_buffer(geography, double precision)
FUNCTION st_buffer(geography, double precision, integer)
FUNCTION st_buffer(geography, double precision, text)
FUNCTION st_buffer(geometry, double precision, integer)
FUNCTION st_buffer(geometry, double precision, text)
FUNCTION st_buffer(text, double precision)
FUNCTION st_buffer(text, double precision, integer)
FUNCTION st_buffer(text, double precision, text)
FUNCTION st_buildarea(geometry)
FUNCTION st_centroid(geography, boolean)
FUNCTION st_centroid(geometry)
FUNCTION st_centroid(text)
FUNCTION st_chaikinsmoothing(geometry, integer, boolean)
FUNCTION st_cleangeometry(geometry)
FUNCTION st_clipbybox2d(geometry, box2d)
FUNCTION st_closestpoint(geometry, geometry)
FUNCTION st_closestpointofapproach(geometry, geometry)
FUNCTION st_clusterdbscan(geometry, double precision, integer)
FUNCTION st_clusterintersecting(geometry[])
FUNCTION st_clusterkmeans(geometry, integer, double precision)
FUNCTION st_clusterwithin(geometry[], double precision)
FUNCTION st_collect(geometry[])
FUNCTION st_collect(geometry, geometry)
FUNCTION st_collectionextract(geometry)
FUNCTION st_collectionextract(geometry, integer)
FUNCTION st_collectionhomogenize(geometry)
FUNCTION st_combinebbox(box2d, geometry)
FUNCTION st_combinebbox(box3d, box3d)
FUNCTION st_combinebbox(box3d, geometry)
FUNCTION st_concavehull(geometry, double precision, boolean)
FUNCTION _st_contains(geometry, geometry)
FUNCTION st_contains(geometry, geometry)
FUNCTION _st_containsproperly(geometry, geometry)
FUNCTION st_containsproperly(geometry, geometry)
FUNCTION st_convexhull(geometry)
FUNCTION st_coorddim(geometry)
FUNCTION _st_coveredby(geography, geography)
FUNCTION st_coveredby(geography, geography)
FUNCTION _st_coveredby(geometry, geometry)
FUNCTION st_coveredby(geometry, geometry)
FUNCTION st_coveredby(text, text)
FUNCTION _st_covers(geography, geography)
FUNCTION st_covers(geography, geography)
FUNCTION _st_covers(geometry, geometry)
FUNCTION st_covers(geometry, geometry)
FUNCTION st_covers(text, text)
FUNCTION st_cpawithin(geometry, geometry, double precision)
FUNCTION _st_crosses(geometry, geometry)
FUNCTION st_crosses(geometry, geometry)
FUNCTION st_curvetoline(geometry, double precision, integer, integer)
FUNCTION st_delaunaytriangles(geometry, double precision, integer)
FUNCTION _st_dfullywithin(geometry, geometry, double precision)
FUNCTION st_dfullywithin(geometry, geometry, double precision)
FUNCTION st_difference(geometry, geometry, double precision)
FUNCTION st_dimension(geometry)
FUNCTION st_disjoint(geometry, geometry)
FUNCTION st_distancecpa(geometry, geometry)
FUNCTION st_distance(geography, geography, boolean)
FUNCTION st_distance(geometry, geometry)
FUNCTION st_distancesphere(geometry, geometry)
FUNCTION st_distancesphere(geometry, geometry, double precision)
FUNCTION st_distancespheroid(geometry, geometry)
FUNCTION st_distancespheroid(geometry, geometry, spheroid)
FUNCTION st_distance(text, text)
FUNCTION _st_distancetree(geography, geography)
FUNCTION _st_distancetree(geography, geography, double precision, boolean)
FUNCTION _st_distanceuncached(geography, geography)
FUNCTION _st_distanceuncached(geography, geography, boolean)
FUNCTION _st_distanceuncached(geography, geography, double precision, boolean)
FUNCTION st_dump(geometry)
FUNCTION st_dumppoints(geometry)
FUNCTION st_dumprings(geometry)
FUNCTION st_dumpsegments(geometry)
FUNCTION _st_dwithin(geography, geography, double precision, boolean)
FUNCTION st_dwithin(geography, geography, double precision, boolean)
FUNCTION _st_dwithin(geometry, geometry, double precision)
FUNCTION st_dwithin(geometry, geometry, double precision)
FUNCTION st_dwithin(text, text, double precision)
FUNCTION _st_dwithinuncached(geography, geography, double precision)
FUNCTION _st_dwithinuncached(geography, geography, double precision, boolean)
FUNCTION st_endpoint(geometry)
FUNCTION st_envelope(geometry)
FUNCTION _st_equals(geometry, geometry)
FUNCTION st_equals(geometry, geometry)
FUNCTION st_estimatedextent(text, text)
FUNCTION st_estimatedextent(text, text, text)
FUNCTION st_estimatedextent(text, text, text, boolean)
FUNCTION st_expand(box2d, double precision)
FUNCTION st_expand(box2d, double precision, double precision)
FUNCTION st_expand(box3d, double precision)
FUNCTION st_expand(box3d, double precision, double precision, double precision)
FUNCTION _st_expand(geography, double precision)
FUNCTION st_expand(geometry, double precision)
FUNCTION st_expand(geometry, double precision, double precision, double precision, double precision)
FUNCTION st_exteriorring(geometry)
FUNCTION st_filterbym(geometry, double precision, double precision, boolean)
FUNCTION st_findextent(text, text)
FUNCTION st_findextent(text, text, text)
FUNCTION st_flipcoordinates(geometry)
FUNCTION st_force2d(geometry)
FUNCTION st_force3d(geometry, double precision)
FUNCTION st_force3dm(geometry, double precision)
FUNCTION st_force3dz(geometry, double precision)
FUNCTION st_force4d(geometry, double precision, double precision)
FUNCTION st_forcecollection(geometry)
FUNCTION st_forcecurve(geometry)
FUNCTION st_forcepolygonccw(geometry)
FUNCTION st_forcepolygoncw(geometry)
FUNCTION st_forcerhr(geometry)
FUNCTION st_forcesfs(geometry)
FUNCTION st_forcesfs(geometry, text)
FUNCTION st_frechetdistance(geometry, geometry, double precision)
FUNCTION st_fromflatgeobuf(anyelement, bytea)
FUNCTION st_fromflatgeobuftotable(text, text, bytea)
FUNCTION st_generatepoints(geometry, integer)
FUNCTION st_generatepoints(geometry, integer, integer)
FUNCTION st_geogfromtext(text)
FUNCTION st_geogfromwkb(bytea)
FUNCTION st_geographyfromtext(text)
FUNCTION st_geohash(geography, integer)
FUNCTION st_geohash(geometry, integer)
FUNCTION st_geomcollfromtext(text)
FUNCTION st_geomcollfromtext(text, integer)
FUNCTION st_geomcollfromwkb(bytea)
FUNCTION st_geomcollfromwkb(bytea, integer)
FUNCTION st_geometricmedian(geometry, double precision, integer, boolean)
FUNCTION st_geometryfromtext(text)
FUNCTION st_geometryfromtext(text, integer)
FUNCTION st_geometryn(geometry, integer)
FUNCTION st_geometrytype(geometry)
FUNCTION st_geomfromewkb(bytea)
FUNCTION st_geomfromewkt(text)
FUNCTION st_geomfromgeohash(text, integer)
FUNCTION st_geomfromgeojson(json)
FUNCTION st_geomfromgeojson(jsonb)
FUNCTION st_geomfromgeojson(text)
FUNCTION st_geomfromgml(text)
FUNCTION _st_geomfromgml(text, integer)
FUNCTION st_geomfromgml(text, integer)
FUNCTION st_geomfromkml(text)
FUNCTION st_geomfrommarc21(text)
FUNCTION st_geomfromtext(text)
FUNCTION st_geomfromtext(text, integer)
FUNCTION st_geomfromtwkb(bytea)
FUNCTION st_geomfromwkb(bytea)
FUNCTION st_geomfromwkb(bytea, integer)
FUNCTION st_gmltosql(text)
FUNCTION st_gmltosql(text, integer)
FUNCTION st_hasarc(geometry)
FUNCTION st_hausdorffdistance(geometry, geometry)
FUNCTION st_hausdorffdistance(geometry, geometry, double precision)
FUNCTION st_hexagon(double precision, integer, integer, geometry)
FUNCTION st_hexagongrid(double precision, geometry)
FUNCTION st_interiorringn(geometry, integer)
FUNCTION st_interpolatepoint(geometry, geometry)
FUNCTION st_intersection(geography, geography)
FUNCTION st_intersection(geometry, geometry, double precision)
FUNCTION st_intersection(text, text)
FUNCTION st_intersects(geography, geography)
FUNCTION _st_intersects(geometry, geometry)
FUNCTION st_intersects(geometry, geometry)
FUNCTION st_intersects(text, text)
FUNCTION st_inversetransformpipeline(geometry, text, integer)
FUNCTION st_isclosed(geometry)
FUNCTION st_iscollection(geometry)
FUNCTION st_isempty(geometry)
FUNCTION st_ispolygonccw(geometry)
FUNCTION st_ispolygoncw(geometry)
FUNCTION st_isring(geometry)
FUNCTION st_issimple(geometry)
FUNCTION st_isvaliddetail(geometry, integer)
FUNCTION st_isvalid(geometry)
FUNCTION st_isvalid(geometry, integer)
FUNCTION st_isvalidreason(geometry)
FUNCTION st_isvalidreason(geometry, integer)
FUNCTION st_isvalidtrajectory(geometry)
FUNCTION st_length2d(geometry)
FUNCTION st_length2dspheroid(geometry, spheroid)
FUNCTION st_length(geography, boolean)
FUNCTION st_length(geometry)
FUNCTION st_lengthspheroid(geometry, spheroid)
FUNCTION st_length(text)
FUNCTION st_letters(text, json)
FUNCTION _st_linecrossingdirection(geometry, geometry)
FUNCTION st_linecrossingdirection(geometry, geometry)
FUNCTION st_linefromencodedpolyline(text, integer)
FUNCTION st_linefrommultipoint(geometry)
FUNCTION st_linefromtext(text)
FUNCTION st_linefromtext(text, integer)
FUNCTION st_linefromwkb(bytea)
FUNCTION st_linefromwkb(bytea, integer)
FUNCTION st_lineinterpolatepoint(geometry, double precision)
FUNCTION st_lineinterpolatepoints(geometry, double precision, boolean)
FUNCTION st_linelocatepoint(geometry, geometry)
FUNCTION st_linemerge(geometry)
FUNCTION st_linemerge(geometry, boolean)
FUNCTION st_linestringfromwkb(bytea)
FUNCTION st_linestringfromwkb(bytea, integer)
FUNCTION st_linesubstring(geometry, double precision, double precision)
FUNCTION st_linetocurve(geometry)
FUNCTION st_locatealong(geometry, double precision, double precision)
FUNCTION st_locatebetweenelevations(geometry, double precision, double precision)
FUNCTION st_locatebetween(geometry, double precision, double precision, double precision)
FUNCTION _st_longestline(geometry, geometry)
FUNCTION st_longestline(geometry, geometry)
FUNCTION st_makebox2d(geometry, geometry)
FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer)
FUNCTION st_makeline(geometry[])
FUNCTION st_makeline(geometry, geometry)
FUNCTION st_makepoint(double precision, double precision)
FUNCTION st_makepoint(double precision, double precision, double precision)
FUNCTION st_makepoint(double precision, double precision, double precision, double precision)
FUNCTION st_makepointm(double precision, double precision, double precision)
FUNCTION st_makepolygon(geometry)
FUNCTION st_makepolygon(geometry, geometry[])
FUNCTION st_makevalid(geometry)
FUNCTION st_makevalid(geometry, text)
FUNCTION _st_maxdistance(geometry, geometry)
FUNCTION st_maxdistance(geometry, geometry)
FUNCTION st_maximuminscribedcircle(geometry)
FUNCTION st_memsize(geometry)
FUNCTION st_m(geometry)
FUNCTION st_minimumboundingcircle(geometry, integer)
FUNCTION st_minimumboundingradius(geometry)
FUNCTION st_minimumclearance(geometry)
FUNCTION st_minimumclearanceline(geometry)
FUNCTION st_mlinefromtext(text)
FUNCTION st_mlinefromtext(text, integer)
FUNCTION st_mlinefromwkb(bytea)
FUNCTION st_mlinefromwkb(bytea, integer)
FUNCTION st_mpointfromtext(text)
FUNCTION st_mpointfromtext(text, integer)
FUNCTION st_mpointfromwkb(bytea)
FUNCTION st_mpointfromwkb(bytea, integer)
FUNCTION st_mpolyfromtext(text)
FUNCTION st_mpolyfromtext(text, integer)
FUNCTION st_mpolyfromwkb(bytea)
FUNCTION st_mpolyfromwkb(bytea, integer)
FUNCTION st_multi(geometry)
FUNCTION st_multilinefromwkb(bytea)
FUNCTION st_multilinestringfromtext(text)
FUNCTION st_multilinestringfromtext(text, integer)
FUNCTION st_multipointfromtext(text)
FUNCTION st_multipointfromwkb(bytea)
FUNCTION st_multipointfromwkb(bytea, integer)
FUNCTION st_multipolyfromwkb(bytea)
FUNCTION st_multipolyfromwkb(bytea, integer)
FUNCTION st_multipolygonfromtext(text)
FUNCTION st_multipolygonfromtext(text, integer)
FUNCTION st_ndims(geometry)
FUNCTION st_node(geometry)
FUNCTION st_normalize(geometry)
FUNCTION st_npoints(geometry)
FUNCTION st_nrings(geometry)
FUNCTION st_numgeometries(geometry)
FUNCTION st_numinteriorring(geometry)
FUNCTION st_numinteriorrings(geometry)
FUNCTION st_numpatches(geometry)
FUNCTION st_numpoints(geometry)
FUNCTION st_offsetcurve(geometry, double precision, text)
FUNCTION _st_orderingequals(geometry, geometry)
FUNCTION st_orderingequals(geometry, geometry)
FUNCTION st_orientedenvelope(geometry)
FUNCTION _st_overlaps(geometry, geometry)
FUNCTION st_overlaps(geometry, geometry)
FUNCTION st_patchn(geometry, integer)
FUNCTION st_perimeter2d(geometry)
FUNCTION st_perimeter(geography, boolean)
FUNCTION st_perimeter(geometry)
FUNCTION st_point(double precision, double precision)
FUNCTION st_point(double precision, double precision, integer)
FUNCTION st_pointfromgeohash(text, integer)
FUNCTION st_pointfromtext(text)
FUNCTION st_pointfromtext(text, integer)
FUNCTION st_pointfromwkb(bytea)
FUNCTION st_pointfromwkb(bytea, integer)
FUNCTION st_pointinsidecircle(geometry, double precision, double precision, double precision)
FUNCTION st_pointm(double precision, double precision, double precision, integer)
FUNCTION st_pointn(geometry, integer)
FUNCTION st_pointonsurface(geometry)
FUNCTION _st_pointoutside(geography)
FUNCTION st_points(geometry)
FUNCTION st_pointz(double precision, double precision, double precision, integer)
FUNCTION st_pointzm(double precision, double precision, double precision, double precision, integer)
FUNCTION st_polyfromtext(text)
FUNCTION st_polyfromtext(text, integer)
FUNCTION st_polyfromwkb(bytea)
FUNCTION st_polyfromwkb(bytea, integer)
FUNCTION st_polygonfromtext(text)
FUNCTION st_polygonfromtext(text, integer)
FUNCTION st_polygonfromwkb(bytea)
FUNCTION st_polygonfromwkb(bytea, integer)
FUNCTION st_polygon(geometry, integer)
FUNCTION st_polygonize(geometry[])
FUNCTION st_project(geography, double precision, double precision)
FUNCTION st_quantizecoordinates(geometry, integer, integer, integer, integer)
FUNCTION st_reduceprecision(geometry, double precision)
FUNCTION st_relate(geometry, geometry)
FUNCTION st_relate(geometry, geometry, integer)
FUNCTION st_relate(geometry, geometry, text)
FUNCTION st_relatematch(text, text)
FUNCTION st_removepoint(geometry, integer)
FUNCTION st_removerepeatedpoints(geometry, double precision)
FUNCTION st_reverse(geometry)
FUNCTION st_rotate(geometry, double precision)
FUNCTION st_rotate(geometry, double precision, double precision, double precision)
FUNCTION st_rotate(geometry, double precision, geometry)
FUNCTION st_rotatex(geometry, double precision)
FUNCTION st_rotatey(geometry, double precision)
FUNCTION st_rotatez(geometry, double precision)
FUNCTION st_scale(geometry, double precision, double precision)
FUNCTION st_scale(geometry, double precision, double precision, double precision)
FUNCTION st_scale(geometry, geometry)
FUNCTION st_scale(geometry, geometry, geometry)
FUNCTION st_scroll(geometry, geometry)
FUNCTION st_segmentize(geography, double precision)
FUNCTION st_segmentize(geometry, double precision)
FUNCTION st_seteffectivearea(geometry, double precision, integer)
FUNCTION st_setpoint(geometry, integer, geometry)
FUNCTION st_setsrid(geography, integer)
FUNCTION st_setsrid(geometry, integer)
FUNCTION st_sharedpaths(geometry, geometry)
FUNCTION st_shiftlongitude(geometry)
FUNCTION st_shortestline(geometry, geometry)
FUNCTION st_simplify(geometry, double precision)
FUNCTION st_simplify(geometry, double precision, boolean)
FUNCTION st_simplifypolygonhull(geometry, double precision, boolean)
FUNCTION st_simplifypreservetopology(geometry, double precision)
FUNCTION st_simplifyvw(geometry, double precision)
FUNCTION st_snap(geometry, geometry, double precision)
FUNCTION st_snaptogrid(geometry, double precision)
FUNCTION st_snaptogrid(geometry, double precision, double precision)
FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision)
FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision)
FUNCTION _st_sortablehash(geometry)
FUNCTION st_split(geometry, geometry)
FUNCTION st_square(double precision, integer, integer, geometry)
FUNCTION st_squaregrid(double precision, geometry)
FUNCTION st_srid(geography)
FUNCTION st_srid(geometry)
FUNCTION st_startpoint(geometry)
FUNCTION st_subdivide(geometry, integer, double precision)
FUNCTION st_summary(geography)
FUNCTION st_summary(geometry)
FUNCTION st_swapordinates(geometry, cstring)
FUNCTION st_symdifference(geometry, geometry, double precision)
FUNCTION st_symmetricdifference(geometry, geometry)
FUNCTION st_tileenvelope(integer, integer, integer, geometry, double precision)
FUNCTION _st_touches(geometry, geometry)
FUNCTION st_touches(geometry, geometry)
FUNCTION st_transform(geometry, integer)
FUNCTION st_transform(geometry, text)
FUNCTION st_transform(geometry, text, integer)
FUNCTION st_transform(geometry, text, text)
FUNCTION st_transformpipeline(geometry, text, integer)
FUNCTION st_translate(geometry, double precision, double precision)
FUNCTION st_translate(geometry, double precision, double precision, double precision)
FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision)
FUNCTION st_triangulatepolygon(geometry)
FUNCTION st_unaryunion(geometry, double precision)
FUNCTION st_union(geometry[])
FUNCTION st_union(geometry, geometry)
FUNCTION st_union(geometry, geometry, double precision)
FUNCTION _st_voronoi(geometry, geometry, double precision, boolean)
FUNCTION st_voronoilines(geometry, double precision, geometry)
FUNCTION st_voronoipolygons(geometry, double precision, geometry)
FUNCTION _st_within(geometry, geometry)
FUNCTION st_within(geometry, geometry)
FUNCTION st_wkbtosql(bytea)
FUNCTION st_wkttosql(text)
FUNCTION st_wrapx(geometry, double precision, double precision)
FUNCTION st_x(geometry)
FUNCTION st_xmax(box3d)
FUNCTION st_xmin(box3d)
FUNCTION st_y(geometry)
FUNCTION st_ymax(box3d)
FUNCTION st_ymin(box3d)
FUNCTION st_z(geometry)
FUNCTION st_zmax(box3d)
FUNCTION st_zmflag(geometry)
FUNCTION st_zmin(box3d)
FUNCTION text(geometry)
FUNCTION unlockrows(text)
FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer)
FUNCTION updategeometrysrid(character varying, character varying, character varying, integer)
FUNCTION updategeometrysrid(character varying, character varying, integer)
OPERATOR &&
OPERATOR &&
OPERATOR &&
OPERATOR &&
OPERATOR &&
OPERATOR &&
OPERATOR &&
OPERATOR &&
OPERATOR &&&
OPERATOR &&&
OPERATOR &&&
OPERATOR &&&
OPERATOR &/&
OPERATOR &<
OPERATOR &<|
OPERATOR &>
OPERATOR <
OPERATOR <
OPERATOR <#>
OPERATOR <->
OPERATOR <->
OPERATOR <<
OPERATOR <<->>
OPERATOR <<@
OPERATOR <<|
OPERATOR <=
OPERATOR <=
OPERATOR =
OPERATOR =
OPERATOR >
OPERATOR >
OPERATOR >=
OPERATOR >=
OPERATOR >>
OPERATOR @
OPERATOR @
OPERATOR @
OPERATOR @
OPERATOR @>>
OPERATOR @@
OPERATOR |&>
OPERATOR |=|
OPERATOR |>>
OPERATOR ~
OPERATOR ~
OPERATOR ~
OPERATOR ~
OPERATOR ~=
OPERATOR ~==
OPERATOR ~~
OPERATOR ~~=
OPERATOR&&(box2df,box2df)
OPERATOR@(box2df,box2df)
OPERATOR~(box2df,box2df)
OPERATOR&&(box2df,geometry)
OPERATOR@(box2df,geometry)
OPERATOR~(box2df,geometry)
OPERATORCLASS brin_geography_inclusion_ops
OPERATORCLASS brin_geometry_inclusion_ops_2d
OPERATORCLASS brin_geometry_inclusion_ops_3d
OPERATORCLASS brin_geometry_inclusion_ops_4d
OPERATORCLASS btree_geography_ops
OPERATORCLASS btree_geometry_ops
OPERATORCLASS gist_geography_ops
OPERATORCLASS gist_geometry_ops_2d
OPERATORCLASS gist_geometry_ops_nd
OPERATORCLASS hash_geometry_ops
OPERATORCLASS spgist_geography_ops_nd
OPERATORCLASS spgist_geometry_ops_2d
OPERATORCLASS spgist_geometry_ops_3d
OPERATORCLASS spgist_geometry_ops_nd
OPERATOR&&(geography,geography)
OPERATOR<(geography,geography)
OPERATOR<->(geography,geography)
OPERATOR<=(geography,geography)
OPERATOR=(geography,geography)
OPERATOR>(geography,geography)
OPERATOR>=(geography,geography)
OPERATOR&&(geography,gidx)
OPERATOR&&(geometry,box2df)
OPERATOR@(geometry,box2df)
OPERATOR~(geometry,box2df)
OPERATOR&&&(geometry,geometry)
OPERATOR&&(geometry,geometry)
OPERATOR&/&(geometry,geometry)
OPERATOR&<(geometry,geometry)
OPERATOR&<|(geometry,geometry)
OPERATOR&>(geometry,geometry)
OPERATOR<#>(geometry,geometry)
OPERATOR<(geometry,geometry)
OPERATOR<->(geometry,geometry)
OPERATOR<<(geometry,geometry)
OPERATOR<<->>(geometry,geometry)
OPERATOR<<@(geometry,geometry)
OPERATOR<<|(geometry,geometry)
OPERATOR<=(geometry,geometry)
OPERATOR=(geometry,geometry)
OPERATOR>(geometry,geometry)
OPERATOR>=(geometry,geometry)
OPERATOR>>(geometry,geometry)
OPERATOR@(geometry,geometry)
OPERATOR@>>(geometry,geometry)
OPERATOR@@(geometry,geometry)
OPERATOR|&>(geometry,geometry)
OPERATOR|=|(geometry,geometry)
OPERATOR|>>(geometry,geometry)
OPERATOR~(geometry,geometry)
OPERATOR~=(geometry,geometry)
OPERATOR~==(geometry,geometry)
OPERATOR~~(geometry,geometry)
OPERATOR~~=(geometry,geometry)
OPERATOR&&&(geometry,gidx)
OPERATOR&&(gidx,geography)
OPERATOR&&&(gidx,geometry)
OPERATOR&&&(gidx,gidx)
OPERATOR&&(gidx,gidx)
OPERATOR public brin_geography_inclusion_ops
OPERATOR public brin_geometry_inclusion_ops_2d
OPERATOR public brin_geometry_inclusion_ops_3d
OPERATOR public brin_geometry_inclusion_ops_4d
OPERATOR public btree_geography_ops
OPERATOR public btree_geometry_ops
OPERATOR public gist_geography_ops
OPERATOR public gist_geometry_ops_2d
OPERATOR public gist_geometry_ops_nd
OPERATOR public hash_geometry_ops
OPERATOR public spgist_geography_ops_nd
OPERATOR public spgist_geometry_ops_2d
OPERATOR public spgist_geometry_ops_3d
OPERATOR public spgist_geometry_ops_nd
RULE geometry_columns geometry_columns_delete
RULE geometry_columns geometry_columns_insert
RULE geometry_columns geometry_columns_update
SHELLTYPE box2d
SHELLTYPE box2df
SHELLTYPE box3d
SHELLTYPE geography
SHELLTYPE geometry
SHELLTYPE gidx
SHELLTYPE spheroid
TABLEDATA spatial_ref_sys
TABLE spatial_ref_sys
TYPE box2d
TYPE box2df
TYPE box3d
TYPE geography
TYPE geometry
TYPE geometry_dump
TYPE gidx
TYPE spheroid
TYPE valid_detail
VIEW geography_columns
VIEW geometry_columns
